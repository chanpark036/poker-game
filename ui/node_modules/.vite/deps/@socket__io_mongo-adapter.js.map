{
  "version": 3,
  "sources": ["../../../../server/node_modules/@socket.io/mongo-adapter/node_modules/ms/index.js", "../../../../server/node_modules/@socket.io/mongo-adapter/node_modules/debug/src/common.js", "../../../../server/node_modules/@socket.io/mongo-adapter/node_modules/debug/src/browser.js", "../../../../server/node_modules/@socket.io/mongo-adapter/dist/index.js"],
  "sourcesContent": ["/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "\"use strict\";\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MongoAdapter = exports.createAdapter = void 0;\nconst socket_io_adapter_1 = require(\"socket.io-adapter\");\nconst crypto_1 = require(\"crypto\");\nconst mongodb_1 = require(\"mongodb\");\nconst randomId = () => (0, crypto_1.randomBytes)(8).toString(\"hex\");\nconst debug = require(\"debug\")(\"socket.io-mongo-adapter\");\n/**\n * Event types, for messages between nodes\n */\nvar EventType;\n(function (EventType) {\n    EventType[EventType[\"INITIAL_HEARTBEAT\"] = 1] = \"INITIAL_HEARTBEAT\";\n    EventType[EventType[\"HEARTBEAT\"] = 2] = \"HEARTBEAT\";\n    EventType[EventType[\"BROADCAST\"] = 3] = \"BROADCAST\";\n    EventType[EventType[\"SOCKETS_JOIN\"] = 4] = \"SOCKETS_JOIN\";\n    EventType[EventType[\"SOCKETS_LEAVE\"] = 5] = \"SOCKETS_LEAVE\";\n    EventType[EventType[\"DISCONNECT_SOCKETS\"] = 6] = \"DISCONNECT_SOCKETS\";\n    EventType[EventType[\"FETCH_SOCKETS\"] = 7] = \"FETCH_SOCKETS\";\n    EventType[EventType[\"FETCH_SOCKETS_RESPONSE\"] = 8] = \"FETCH_SOCKETS_RESPONSE\";\n    EventType[EventType[\"SERVER_SIDE_EMIT\"] = 9] = \"SERVER_SIDE_EMIT\";\n    EventType[EventType[\"SERVER_SIDE_EMIT_RESPONSE\"] = 10] = \"SERVER_SIDE_EMIT_RESPONSE\";\n    EventType[EventType[\"BROADCAST_CLIENT_COUNT\"] = 11] = \"BROADCAST_CLIENT_COUNT\";\n    EventType[EventType[\"BROADCAST_ACK\"] = 12] = \"BROADCAST_ACK\";\n    EventType[EventType[\"SESSION\"] = 13] = \"SESSION\";\n})(EventType || (EventType = {}));\n/**\n * UID of an emitter using the `@socket.io/mongo-emitter` package\n */\nconst EMITTER_UID = \"emitter\";\n/**\n * It seems the `promoteBuffers` option is not always honored, so we manually replace Binary objects by the underlying\n * Buffer objects.\n *\n * Update: it seems to be fixed with `mongodb@4`, but we'll keep it for backward compatibility\n *\n * Reference:\n * - http://mongodb.github.io/node-mongodb-native/3.6/api/Binary.html\n * - https://jira.mongodb.org/browse/NODE-1421\n */\nconst replaceBinaryObjectsByBuffers = (obj) => {\n    if (!obj || typeof obj !== \"object\") {\n        return obj;\n    }\n    if (obj._bsontype === \"Binary\" && Buffer.isBuffer(obj.buffer)) {\n        return obj.buffer;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0; i < obj.length; i++) {\n            obj[i] = replaceBinaryObjectsByBuffers(obj[i]);\n        }\n    }\n    else {\n        for (const key in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                obj[key] = replaceBinaryObjectsByBuffers(obj[key]);\n            }\n        }\n    }\n    return obj;\n};\nfunction onPublishError(err) {\n    debug(\"something went wrong when inserting the MongoDB document: %s\", err);\n}\n/**\n * Returns a function that will create a MongoAdapter instance.\n *\n * @param mongoCollection - a MongoDB collection instance\n * @param opts - additional options\n *\n * @public\n */\nfunction createAdapter(mongoCollection, opts = {}) {\n    opts.uid = opts.uid || randomId();\n    let isClosed = false;\n    let adapters = new Map();\n    let changeStream;\n    let changeStreamOpts = {};\n    const initChangeStream = () => {\n        if (isClosed || (changeStream && !changeStream.closed)) {\n            return;\n        }\n        debug(\"opening change stream\");\n        changeStream = mongoCollection.watch([\n            {\n                $match: {\n                    \"fullDocument.uid\": {\n                        $ne: opts.uid, // ignore events from self\n                    },\n                },\n            },\n        ], changeStreamOpts);\n        changeStream.on(\"change\", (event) => {\n            var _a, _b;\n            if (event.operationType === \"insert\") {\n                changeStreamOpts.resumeAfter = changeStream.resumeToken;\n                (_b = adapters.get((_a = event.fullDocument) === null || _a === void 0 ? void 0 : _a.nsp)) === null || _b === void 0 ? void 0 : _b.onEvent(event);\n            }\n        });\n        changeStream.on(\"error\", (err) => {\n            debug(\"change stream encountered an error: %s\", err.message);\n            if (err instanceof mongodb_1.MongoServerError &&\n                !err.hasErrorLabel(\"ResumableChangeStreamError\")) {\n                // the resume token was not found in the oplog\n                changeStreamOpts = {};\n            }\n        });\n        changeStream.on(\"close\", () => {\n            debug(\"change stream was closed, scheduling reconnection...\");\n            setTimeout(() => {\n                initChangeStream();\n            }, 1000);\n        });\n    };\n    return function (nsp) {\n        if (!changeStream) {\n            isClosed = false;\n            initChangeStream();\n        }\n        let adapter = new MongoAdapter(nsp, mongoCollection, opts);\n        adapters.set(nsp.name, adapter);\n        const defaultClose = adapter.close;\n        adapter.close = async () => {\n            adapters.delete(nsp.name);\n            if (adapters.size === 0) {\n                changeStream.removeAllListeners(\"close\");\n                await changeStream.close();\n                // @ts-ignore\n                changeStream = null;\n                isClosed = true;\n            }\n            defaultClose.call(adapter);\n        };\n        return adapter;\n    };\n}\nexports.createAdapter = createAdapter;\nclass MongoAdapter extends socket_io_adapter_1.Adapter {\n    /**\n     * Adapter constructor.\n     *\n     * @param nsp - the namespace\n     * @param mongoCollection - a MongoDB collection instance\n     * @param opts - additional options\n     *\n     * @public\n     */\n    constructor(nsp, mongoCollection, opts = {}) {\n        super(nsp);\n        this.nodesMap = new Map(); // uid => timestamp of last message\n        this.requests = new Map();\n        this.ackRequests = new Map();\n        this.isClosed = false;\n        this.mongoCollection = mongoCollection;\n        this.uid = opts.uid;\n        this.requestsTimeout = opts.requestsTimeout || 5000;\n        this.heartbeatInterval = opts.heartbeatInterval || 5000;\n        this.heartbeatTimeout = opts.heartbeatTimeout || 10000;\n        this.addCreatedAtField = !!opts.addCreatedAtField;\n        this.publish({\n            type: EventType.INITIAL_HEARTBEAT,\n        }).catch(onPublishError);\n    }\n    close() {\n        this.isClosed = true;\n        if (this.heartbeatTimer) {\n            clearTimeout(this.heartbeatTimer);\n        }\n        return;\n    }\n    async onEvent(event) {\n        const document = event.fullDocument;\n        debug(\"new event of type %d for %s from %s\", document.type, document.nsp, document.uid);\n        if (document.uid && document.uid !== EMITTER_UID) {\n            this.nodesMap.set(document.uid, Date.now());\n        }\n        switch (document.type) {\n            case EventType.INITIAL_HEARTBEAT: {\n                this.publish({\n                    type: EventType.HEARTBEAT,\n                }).catch(onPublishError);\n                break;\n            }\n            case EventType.BROADCAST: {\n                debug(\"broadcast with opts %j\", document.data.opts);\n                const withAck = document.data.requestId !== undefined;\n                if (withAck) {\n                    super.broadcastWithAck(replaceBinaryObjectsByBuffers(document.data.packet), MongoAdapter.deserializeOptions(document.data.opts), (clientCount) => {\n                        debug(\"waiting for %d client acknowledgements\", clientCount);\n                        this.publish({\n                            type: EventType.BROADCAST_CLIENT_COUNT,\n                            data: {\n                                requestId: document.data.requestId,\n                                clientCount,\n                            },\n                        });\n                    }, (arg) => {\n                        debug(\"received acknowledgement with value %j\", arg);\n                        this.publish({\n                            type: EventType.BROADCAST_ACK,\n                            data: {\n                                requestId: document.data.requestId,\n                                packet: arg,\n                            },\n                        });\n                    });\n                }\n                else {\n                    const packet = replaceBinaryObjectsByBuffers(document.data.packet);\n                    const opts = MongoAdapter.deserializeOptions(document.data.opts);\n                    this.addOffsetIfNecessary(packet, opts, document._id);\n                    super.broadcast(packet, opts);\n                }\n                break;\n            }\n            case EventType.BROADCAST_CLIENT_COUNT: {\n                const request = this.ackRequests.get(document.data.requestId);\n                request === null || request === void 0 ? void 0 : request.clientCountCallback(document.data.clientCount);\n                break;\n            }\n            case EventType.BROADCAST_ACK: {\n                const request = this.ackRequests.get(document.data.requestId);\n                const clientResponse = replaceBinaryObjectsByBuffers(document.data.packet);\n                request === null || request === void 0 ? void 0 : request.ack(clientResponse);\n                break;\n            }\n            case EventType.SOCKETS_JOIN: {\n                debug(\"calling addSockets with opts %j\", document.data.opts);\n                super.addSockets(MongoAdapter.deserializeOptions(document.data.opts), document.data.rooms);\n                break;\n            }\n            case EventType.SOCKETS_LEAVE: {\n                debug(\"calling delSockets with opts %j\", document.data.opts);\n                super.delSockets(MongoAdapter.deserializeOptions(document.data.opts), document.data.rooms);\n                break;\n            }\n            case EventType.DISCONNECT_SOCKETS: {\n                debug(\"calling disconnectSockets with opts %j\", document.data.opts);\n                super.disconnectSockets(MongoAdapter.deserializeOptions(document.data.opts), document.data.close);\n                break;\n            }\n            case EventType.FETCH_SOCKETS: {\n                debug(\"calling fetchSockets with opts %j\", document.data.opts);\n                const localSockets = await super.fetchSockets(MongoAdapter.deserializeOptions(document.data.opts));\n                this.publish({\n                    type: EventType.FETCH_SOCKETS_RESPONSE,\n                    data: {\n                        requestId: document.data.requestId,\n                        sockets: localSockets.map((socket) => ({\n                            id: socket.id,\n                            handshake: socket.handshake,\n                            rooms: [...socket.rooms],\n                            data: socket.data,\n                        })),\n                    },\n                }).catch(onPublishError);\n                break;\n            }\n            case EventType.FETCH_SOCKETS_RESPONSE: {\n                const request = this.requests.get(document.data.requestId);\n                if (!request) {\n                    return;\n                }\n                request.current++;\n                document.data.sockets.forEach((socket) => request.responses.push(socket));\n                if (request.current === request.expected) {\n                    clearTimeout(request.timeout);\n                    request.resolve(request.responses);\n                    this.requests.delete(document.data.requestId);\n                }\n                break;\n            }\n            case EventType.SERVER_SIDE_EMIT: {\n                const packet = document.data.packet;\n                const withAck = document.data.requestId !== undefined;\n                if (!withAck) {\n                    this.nsp._onServerSideEmit(packet);\n                    return;\n                }\n                let called = false;\n                const callback = (arg) => {\n                    // only one argument is expected\n                    if (called) {\n                        return;\n                    }\n                    called = true;\n                    debug(\"calling acknowledgement with %j\", arg);\n                    this.publish({\n                        type: EventType.SERVER_SIDE_EMIT_RESPONSE,\n                        data: {\n                            requestId: document.data.requestId,\n                            packet: arg,\n                        },\n                    });\n                };\n                packet.push(callback);\n                this.nsp._onServerSideEmit(packet);\n                break;\n            }\n            case EventType.SERVER_SIDE_EMIT_RESPONSE: {\n                const request = this.requests.get(document.data.requestId);\n                if (!request) {\n                    return;\n                }\n                request.current++;\n                request.responses.push(document.data.packet);\n                if (request.current === request.expected) {\n                    clearTimeout(request.timeout);\n                    request.resolve(null, request.responses);\n                    this.requests.delete(document.data.requestId);\n                }\n            }\n        }\n    }\n    scheduleHeartbeat() {\n        if (this.heartbeatTimer) {\n            clearTimeout(this.heartbeatTimer);\n        }\n        this.heartbeatTimer = setTimeout(() => {\n            debug(\"sending heartbeat\");\n            this.publish({\n                type: EventType.HEARTBEAT,\n            }).catch(onPublishError);\n            this.scheduleHeartbeat();\n        }, this.heartbeatInterval);\n    }\n    publish(document) {\n        if (this.isClosed) {\n            return Promise.reject(\"adapter is closed\");\n        }\n        debug(\"publish document %d\", document.type);\n        document.uid = this.uid;\n        document.nsp = this.nsp.name;\n        if (this.addCreatedAtField) {\n            document.createdAt = new Date();\n        }\n        this.scheduleHeartbeat();\n        return this.mongoCollection\n            .insertOne(document)\n            .then((result) => result.insertedId.toString(\"hex\"));\n    }\n    /**\n     * Transform ES6 Set into plain arrays\n     */\n    static serializeOptions(opts) {\n        return {\n            rooms: [...opts.rooms],\n            except: opts.except ? [...opts.except] : [],\n            flags: opts.flags,\n        };\n    }\n    static deserializeOptions(opts) {\n        return {\n            rooms: new Set(opts.rooms),\n            except: new Set(opts.except),\n            flags: opts.flags,\n        };\n    }\n    async broadcast(packet, opts) {\n        var _a;\n        const onlyLocal = (_a = opts === null || opts === void 0 ? void 0 : opts.flags) === null || _a === void 0 ? void 0 : _a.local;\n        if (!onlyLocal) {\n            try {\n                const offset = await this.publish({\n                    type: EventType.BROADCAST,\n                    data: {\n                        packet,\n                        opts: MongoAdapter.serializeOptions(opts),\n                    },\n                });\n                this.addOffsetIfNecessary(packet, opts, offset);\n            }\n            catch (err) {\n                debug(\"error while inserting document: %s\", err);\n                return;\n            }\n        }\n        // packets with binary contents are modified by the broadcast method, hence the nextTick()\n        // update: this should be fixed now, but we'll keep it for backward compatibility\n        // see: https://github.com/socketio/socket.io-parser/commit/ae8dd88995dbd7f89c97e5cc15e5b489fa0efece\n        process.nextTick(() => {\n            super.broadcast(packet, opts);\n        });\n    }\n    /**\n     * Adds an offset at the end of the data array in order to allow the client to receive any missed packets when it\n     * reconnects after a temporary disconnection.\n     *\n     * @param packet\n     * @param opts\n     * @param offset\n     * @private\n     */\n    addOffsetIfNecessary(packet, opts, offset) {\n        var _a;\n        if (!this.nsp.server.opts.connectionStateRecovery) {\n            return;\n        }\n        const isEventPacket = packet.type === 2;\n        // packets with acknowledgement are not stored because the acknowledgement function cannot be serialized and\n        // restored on another server upon reconnection\n        const withoutAcknowledgement = packet.id === undefined;\n        const notVolatile = ((_a = opts.flags) === null || _a === void 0 ? void 0 : _a.volatile) === undefined;\n        if (isEventPacket && withoutAcknowledgement && notVolatile) {\n            packet.data.push(offset);\n        }\n    }\n    broadcastWithAck(packet, opts, clientCountCallback, ack) {\n        var _a;\n        const onlyLocal = (_a = opts === null || opts === void 0 ? void 0 : opts.flags) === null || _a === void 0 ? void 0 : _a.local;\n        if (!onlyLocal) {\n            const requestId = randomId();\n            this.publish({\n                type: EventType.BROADCAST,\n                data: {\n                    packet,\n                    requestId,\n                    opts: MongoAdapter.serializeOptions(opts),\n                },\n            }).catch(onPublishError);\n            this.ackRequests.set(requestId, {\n                type: EventType.BROADCAST,\n                clientCountCallback,\n                ack,\n            });\n            // we have no way to know at this level whether the server has received an acknowledgement from each client, so we\n            // will simply clean up the ackRequests map after the given delay\n            setTimeout(() => {\n                this.ackRequests.delete(requestId);\n            }, opts.flags.timeout);\n        }\n        // packets with binary contents are modified by the broadcast method, hence the nextTick()\n        process.nextTick(() => {\n            super.broadcastWithAck(packet, opts, clientCountCallback, ack);\n        });\n    }\n    serverCount() {\n        this.nodesMap.forEach((lastSeen, uid) => {\n            const nodeSeemsDown = Date.now() - lastSeen > this.heartbeatTimeout;\n            if (nodeSeemsDown) {\n                debug(\"node %s seems down\", uid);\n                this.nodesMap.delete(uid);\n            }\n        });\n        return Promise.resolve(1 + this.nodesMap.size);\n    }\n    addSockets(opts, rooms) {\n        var _a;\n        super.addSockets(opts, rooms);\n        const onlyLocal = (_a = opts.flags) === null || _a === void 0 ? void 0 : _a.local;\n        if (onlyLocal) {\n            return;\n        }\n        this.publish({\n            type: EventType.SOCKETS_JOIN,\n            data: {\n                opts: MongoAdapter.serializeOptions(opts),\n                rooms,\n            },\n        }).catch(onPublishError);\n    }\n    delSockets(opts, rooms) {\n        var _a;\n        super.delSockets(opts, rooms);\n        const onlyLocal = (_a = opts.flags) === null || _a === void 0 ? void 0 : _a.local;\n        if (onlyLocal) {\n            return;\n        }\n        this.publish({\n            type: EventType.SOCKETS_LEAVE,\n            data: {\n                opts: MongoAdapter.serializeOptions(opts),\n                rooms,\n            },\n        }).catch(onPublishError);\n    }\n    disconnectSockets(opts, close) {\n        var _a;\n        super.disconnectSockets(opts, close);\n        const onlyLocal = (_a = opts.flags) === null || _a === void 0 ? void 0 : _a.local;\n        if (onlyLocal) {\n            return;\n        }\n        this.publish({\n            type: EventType.DISCONNECT_SOCKETS,\n            data: {\n                opts: MongoAdapter.serializeOptions(opts),\n                close,\n            },\n        }).catch(onPublishError);\n    }\n    async fetchSockets(opts) {\n        var _a;\n        const localSockets = await super.fetchSockets(opts);\n        const expectedResponseCount = (await this.serverCount()) - 1;\n        if (((_a = opts.flags) === null || _a === void 0 ? void 0 : _a.local) || expectedResponseCount === 0) {\n            return localSockets;\n        }\n        const requestId = randomId();\n        return new Promise((resolve, reject) => {\n            const timeout = setTimeout(() => {\n                const storedRequest = this.requests.get(requestId);\n                if (storedRequest) {\n                    reject(new Error(`timeout reached: only ${storedRequest.current} responses received out of ${storedRequest.expected}`));\n                    this.requests.delete(requestId);\n                }\n            }, this.requestsTimeout);\n            const storedRequest = {\n                type: EventType.FETCH_SOCKETS,\n                resolve,\n                timeout,\n                current: 0,\n                expected: expectedResponseCount,\n                responses: localSockets,\n            };\n            this.requests.set(requestId, storedRequest);\n            this.publish({\n                type: EventType.FETCH_SOCKETS,\n                data: {\n                    opts: MongoAdapter.serializeOptions(opts),\n                    requestId,\n                },\n            });\n        });\n    }\n    serverSideEmit(packet) {\n        const withAck = typeof packet[packet.length - 1] === \"function\";\n        if (withAck) {\n            this.serverSideEmitWithAck(packet).catch(() => {\n                // ignore errors\n            });\n            return;\n        }\n        this.publish({\n            type: EventType.SERVER_SIDE_EMIT,\n            data: {\n                packet,\n            },\n        }).catch(onPublishError);\n    }\n    async serverSideEmitWithAck(packet) {\n        const ack = packet.pop();\n        const expectedResponseCount = (await this.serverCount()) - 1;\n        debug('waiting for %d responses to \"serverSideEmit\" request', expectedResponseCount);\n        if (expectedResponseCount <= 0) {\n            return ack(null, []);\n        }\n        const requestId = randomId();\n        const timeout = setTimeout(() => {\n            const storedRequest = this.requests.get(requestId);\n            if (storedRequest) {\n                ack(new Error(`timeout reached: only ${storedRequest.current} responses received out of ${storedRequest.expected}`), storedRequest.responses);\n                this.requests.delete(requestId);\n            }\n        }, this.requestsTimeout);\n        const storedRequest = {\n            type: EventType.FETCH_SOCKETS,\n            resolve: ack,\n            timeout,\n            current: 0,\n            expected: expectedResponseCount,\n            responses: [],\n        };\n        this.requests.set(requestId, storedRequest);\n        this.publish({\n            type: EventType.SERVER_SIDE_EMIT,\n            data: {\n                requestId,\n                packet,\n            },\n        }).catch(onPublishError);\n    }\n    persistSession(session) {\n        debug(\"persisting session: %j\", session);\n        this.publish({\n            type: EventType.SESSION,\n            data: session,\n        }).catch(onPublishError);\n    }\n    async restoreSession(pid, offset) {\n        var _a, e_1, _b, _c;\n        var _d, _e;\n        if (!mongodb_1.ObjectId.isValid(offset)) {\n            return Promise.reject(\"invalid offset\");\n        }\n        debug(\"restoring session: %s\", pid);\n        const eventOffset = new mongodb_1.ObjectId(offset);\n        let results;\n        try {\n            results = await Promise.all([\n                // could use a sparse index on [data.pid] (only index the documents whose type is EventType.SESSION)\n                this.findSession(pid),\n                this.mongoCollection.findOne({\n                    type: EventType.BROADCAST,\n                    _id: eventOffset,\n                }),\n            ]);\n        }\n        catch (e) {\n            debug(\"error while fetching session: %s\", e.message);\n            return Promise.reject(\"error while fetching session\");\n        }\n        if (!results[0] || !results[1]) {\n            return Promise.reject(\"session or offset not found\");\n        }\n        const session = results[0].data;\n        // could use a sparse index on [_id, nsp, data.opts.rooms, data.opts.except] (only index the documents whose type is EventType.BROADCAST)\n        const cursor = this.mongoCollection.find({\n            $and: [\n                {\n                    type: EventType.BROADCAST,\n                },\n                {\n                    _id: {\n                        $gt: eventOffset,\n                    },\n                },\n                {\n                    nsp: this.nsp.name,\n                },\n                {\n                    $or: [\n                        {\n                            \"data.opts.rooms\": {\n                                $size: 0,\n                            },\n                        },\n                        {\n                            \"data.opts.rooms\": {\n                                $in: session.rooms,\n                            },\n                        },\n                    ],\n                },\n                {\n                    $or: [\n                        {\n                            \"data.opts.except\": {\n                                $size: 0,\n                            },\n                        },\n                        {\n                            \"data.opts.except\": {\n                                $nin: session.rooms,\n                            },\n                        },\n                    ],\n                },\n            ],\n        });\n        session.missedPackets = [];\n        try {\n            try {\n                for (var _f = true, cursor_1 = __asyncValues(cursor), cursor_1_1; cursor_1_1 = await cursor_1.next(), _a = cursor_1_1.done, !_a;) {\n                    _c = cursor_1_1.value;\n                    _f = false;\n                    try {\n                        const document = _c;\n                        const packetData = (_e = (_d = document === null || document === void 0 ? void 0 : document.data) === null || _d === void 0 ? void 0 : _d.packet) === null || _e === void 0 ? void 0 : _e.data;\n                        if (packetData) {\n                            session.missedPackets.push(packetData);\n                        }\n                    }\n                    finally {\n                        _f = true;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (!_f && !_a && (_b = cursor_1.return)) await _b.call(cursor_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n        catch (e) {\n            return Promise.reject(\"error while fetching missed packets\");\n        }\n        return session;\n    }\n    findSession(pid) {\n        const isCollectionCapped = !this.addCreatedAtField;\n        if (isCollectionCapped) {\n            return this.mongoCollection\n                .findOne({\n                type: EventType.SESSION,\n                \"data.pid\": pid,\n            }, {\n                sort: {\n                    _id: -1,\n                },\n            })\n                .then((result) => {\n                if (!result) {\n                    debug(\"session not found\");\n                    return;\n                }\n                if (result.data.sid) {\n                    debug(\"session found, adding tombstone\");\n                    // since the collection is capped, we cannot remove documents from it, so we add a tombstone to prevent recovering the same session twice\n                    // note: we could also have used two distinct collections, one for the events (capped) and the other for the sessions (not capped, with a TTL)\n                    const TOMBSTONE_SESSION = { pid, tombstone: true };\n                    this.persistSession(TOMBSTONE_SESSION);\n                    return result;\n                }\n                else {\n                    debug(\"tombstone session found\");\n                }\n            });\n        }\n        else {\n            return this.mongoCollection\n                .findOneAndDelete({\n                type: EventType.SESSION,\n                \"data.pid\": pid,\n            })\n                .then((result) => {\n                return (result === null || result === void 0 ? void 0 : result.ok) && result.value\n                    ? result.value // mongodb@5\n                    : result; // mongodb@6\n            });\n        }\n    }\n}\nexports.MongoAdapter = MongoAdapter;\n"],
  "mappings": "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",
  "names": ["require_dist", "v", "EventType", "document", "storedRequest"]
}
